// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/26/2017 20:33:37"
                                                                                
// Verilog Test Bench template for design : top
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 100 ps
module top_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg i_clk;
// wires                                               
wire [1:0]  o_eth_data;
wire o_eth_tx_en;
wire [31:0] d_crc32;
wire o_led_tx;

localparam T = 20;// 20 ns = 50 MHz


// assign statements (if any)                          
top i1 (
// port map - connection between master ports and signals/registers   
    .i_clk(i_clk),
    .o_eth_data(o_eth_data),
    .o_eth_tx_en(o_eth_tx_en),
    .o_led_tx(o_led_tx),
    .d_crc32(d_crc32)
);

initial
begin                                                  

// insert code here --> begin                          
    i_clk = 0;              

// --> end                                             
$display("Running testbench");                       
end                                                    

always #(T/2) forever #(T/2) i_clk = ! i_clk;


always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
    #2_000_000;
    $stop;
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

